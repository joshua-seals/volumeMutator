# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   creationTimestamp: null
#   labels:
#     app: volume-mutator
#   name: volume-mutator
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: volume-mutator
#   strategy: {}
#   template:
#     metadata:
#       creationTimestamp: null
#       labels:
#         app: volume-mutator
#     spec:
#       volumes:
#       - name: webhook-certs
#         emptyDir: {}
#       initContainers:
#       - image: helxplatform/volume-mutator:0.0.1
#         name: generateTLSCerts
#         command: ['./tools/generateTLSCerts']
#       volumeMounts:
#         - mountPath: /helx/webhook/certs
#           name: webhook-certs
#       # env:
#       # - name: MUTATE_CONFIG
#       #   value: mutating-webhook-configuration
#       # - name: WEBHOOK_SERVICE
#       #   value: volume-mutator-svc
#       # - name: WEBHOOK_NAMESPACE
#       #   value:  default
#       containers:
#       - image: nginx:latest
#       # - image: helxplatform/volume-mutator:0.0.1
#         name: volume-mutator
#         volumeMounts:
#         - mountPath: /helx/webhook/certs 
#           name: webhook-certs 
#           readOnly: true
#         resources: {}
# status: {}

# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   name: default-role
# rules:
# - apiGroups: ["admissionregistration.k8s.io"]
#   resources: ["pods"]
#   verbs: ["get", "list", "watch", "update"] # Adjust these permissions based on your requirements

# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: default-role-binding
# subjects:
# - kind: ServiceAccount
#   name: default
#   namespace: default
# roleRef:
#   kind: Role
#   name: default-role
#   apiGroup: rbac.authorization.k8s.io

# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   name: volume-mutator
# rules:
# - apiGroups: ["admissionregistration.k8s.io"]
#   resources: ["pods","deployments"]
#   verbs: ["get", "list", "watch","update"] # Adjust these permissions based on your requirements

# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: volume-mutator
# subjects:
# - kind: ServiceAccount
#   name: default
#   namespace: default
# roleRef:
#   kind: Role
#   name: cluster-role
#   apiGroup: rbac.authorization.k8s.io

--- 
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: volume-mutator
  name: volume-mutator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: volume-mutator
  strategy: {}
  template:
    metadata:
      labels:
        app: volume-mutator
    spec:
      volumes:
      - name: webhook-certs
        emptyDir: {}
      initContainers:
      - image: helxplatform/volume-mutator:0.0.1
        name: tooling
        # command: ['./generateTLSCerts']
        env:
        - name: MUTATE_CONFIG
          value: volume-mutator
        - name: WEBHOOK_SERVICE
          value: volume-mutator-svc
        - name: WEBHOOK_NAMESPACE
          value:  default
        volumeMounts:
        - mountPath: /helx/webhook/certs
          name: webhook-certs
      containers:
      - image: nginx:latest
        name: nginx
        volumeMounts:
        - mountPath: /helx/webhook/certs 
          name: webhook-certs 
          readOnly: true
        resources: {}
